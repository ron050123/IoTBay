@model IoTBay.web.Models.Entities.Usr

@{
    ViewData["Title"] = "Register";
}
<style>
    .login-container {
    margin: 180px auto;
    max-width: 500px;
    background-color: #fff;
    padding: 30px;
    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);
}

h1{
    text-align: center;
    font-size: 36px;
    margin-bottom: 30px;
}

h2{
    text-align: center;
    font-size: 15px ;
    margin-bottom: 10px;
}

form {
    display: flex;
    flex-direction: column;
}

label {
    font-size: 18px;
    margin-bottom: 5px;
}

input[type="email"], input[type="password"] {
    padding: 10px;
    margin-bottom: 20px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.2);
}

button[type="submit"] {
    padding: 10px;
    border: none;
    border-radius: 5px;
    color: #fff;
    font-size: 18px;
    background-color: #007bff;
}

button[type="submit"]:hover {
    background-color: #0062cc;
}
</style>


<div class="login-container">
    <h1>Register</h1>
    <form asp-action="Register" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Email" class="control-label"></label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Password" class="control-label"></label>
            <input asp-for="Password" class="form-control" type="password" step="0.01"/>
        </div>
        <div class="form-group" style="margin-top: -10px;">
            <span id="passwordError" class="text-danger" style="margin-top: 5px; margin-bottom: 0;"></span>
        </div>

        <button type="submit" class="btn btn-primary" style="margin-top: 10px">Register</button>
        <br/>
        <h2>Already a Member? Please click <a href="login">here!</a></h2>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        function validatePassword(password) {
            const regexPattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,30}$/;
            return regexPattern.test(password);
        }

        function toggleRegisterButton() {
            const passwordInput = document.getElementById("Password");
            const registerButton = document.querySelector('button[type="submit"]');
            const passwordError = document.querySelector('#passwordError');
          
            if (validatePassword(passwordInput.value)) {
                registerButton.disabled = false;
                passwordError.textContent = "";
            } else {
                registerButton.disabled = true;
                passwordError.textContent = "Password must contain uppercase letter, lowercase letter, and number.";
            }
        }
        const passwordInput = document.getElementById("Password");
        if (passwordInput) {
            passwordInput.addEventListener("input", toggleRegisterButton);
        } else {
            console.error("Password input field not found.");
        }

        toggleRegisterButton();
        });
        
</script>
